<!-- rtabmap-nishi_stereo_outdoor2_bz3_navi.launch -->
<launch>
   <!--
      Original is.
      Demo of outdoor stereo mapping. 
      From bag: 
      $ rosbag record 
            /stereo_camera/left/image_raw_throttle/compressed 
            /stereo_camera/right/image_raw_throttle/compressed 
            /stereo_camera/left/camera_info_throttle 
            /stereo_camera/right/camera_info_throttle 
            /tf
    
      $ roslaunch rtabmap demo_stereo_outdoor.launch
      $ rosbag play -.-clock stereo_oudoorA.bag

      https://answers.ros.org/question/300345/robot-localization-package-transform-from-base_link-to-odom-was-unavailable-for-the-time-requested-using-latest-instead-imugps/
      http://wiki.ros.org/rtabmap_ros/Tutorials/Advanced%20Parameter%20Tuning

      1) PC
       $ sudo ufw disable / enable / reload
       $ sudo ntpdate ntp.nict.jp
       $ roscore
      2) SBC
       $ sudo chmod 777 /dev/ttyTHS1
       $ sudo ntpdate ntp.nict.jp
       $ roslaunch turtlebot3_bringup turtlebot3_robot.launch -.-screen
      3) SBC
       $ roslaunch rtabmap_ros_my rtabmap-nishi_stereo_outdoor2_bz3_navi.launch SBC:=true
      4) PC
       $ roslaunch rtabmap_ros_my rtabmap-nishi_stereo_outdoor2_bz3_navi.launch PC:=true [rtabmapviz:=true]

      5) PC run multi_goals4_cmd_vel
       $ roslaunch rtabmap_ros_my rtabmap-nishi_stereo_outdoor2_bz3_navi.launch robo_navi:=true

      6) PC
       $ rosrun turtlebot3_navi_my multi_goals4.py
       $ rosrun turtlebot3_navi_my multi_goals4_cmd_vel.py
       $ rosrun turtlebot3_navi_my cmd_vel2.py
      7) PC
       $ roslaunch turtlebot3_teleop turtlebot3_teleop_key.launch
      8) PC
       $ rosrun turtlebot3_navi_my mower_robo4.py

      9) PC
       $ rosrun turtlebot3_navi_my drive_base


   -->
   <!-- Arguments -->
   <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
   <arg name="move_forward_only" default="false"/>
  
   <!-- Choose visualization -->
   <arg name="rviz" default="false" />
   <arg name="rviz_nishi" default="true" />

   <arg name="rtabmapviz" default="false" />
   <arg name="localization" default="false"/>
   <arg name="database_path" default="~/.ros/rtabmap_bz3.db"/>
   <arg     if="$(arg localization)" name="rtabmap_args" default=""/>
   <arg unless="$(arg localization)" name="rtabmap_args" default="--delete_db_on_start"/>

   <arg name="stereo_sync" default="true" />

   <arg name="move_base" default="false"/>
   <arg name="move_navigation" default="false"/>
   <arg name="robo_navi" default="false"/>

   <arg name="SBC" default="false"/>
   <arg name="SBCX" default="false"/>
   <arg name="PC" default="false"/>

   <arg name="mode" default="mode1"/>
   <arg name="fusion" default="false"/>
   <arg name="obstacles" default="false"/>

   <arg name="BASE_LINK" default="base_link"/>

   <!-- <param name="use_sim_time" type="bool" value="True"/> -->
   <param name="use_sim_time" type="bool" value="False"/>

   <!-- <arg name="prog" default="multi_goals4_cmd_vel"/> -->
   <arg name="prog" default="turtlebot3_navi_my_map_builder"/>

   <!-- 180[d] -->
   <arg name="pi/2" value="1.5707963267948966" />

   <!-- <arg name="optical_rotate" value="0 0 0 -$(arg pi/2) 0 -$(arg pi/2)" /> -->
   <arg name="optical_rotate" value="0 0.003 0.19 -$(arg pi/2) 0 -$(arg pi/2)" />

   <group if="$(arg SBC)">
      <node pkg="tf" type="static_transform_publisher" name="camera_base_link"
         args="$(arg optical_rotate) $(arg BASE_LINK) stereo_camera 30" />  
      <node pkg="tf" type="static_transform_publisher" name="camera2_base_link"
            args="0 0 0 0 0 0 stereo_camera source_frame 30" /> 
      <node pkg="tf" type="static_transform_publisher" name="camera3_base_link"
            args="0 0 0 0 0 0 source_frame camera 30" /> 
   </group>

   <!-- Turtlebot3 -->
   <group if="$(arg PC)">
      <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
         <arg name="model" value="$(arg model)" />
         <!-- turtlebot3/turtlebot3_description/urdf/turtlebot3_waffle.urdf.xacro -->
      </include>
   </group>
 
   <!-- Run the ROS package stereo_image_proc for image rectification -->
   <group if="$(arg SBC)">
      <include file="$(find uvc_camera)/launch/single_stereo_nodelet.launch">
      </include>
      <!-- <include file="$(find rtabmap_ros_my)/launch/stereo_image_proc_nishi.launch"> -->
      <include file="$(find stereo_image_proc)/launch/stereo_image_proc.launch">
         <arg name="manager" value="/camera_process" />
         <!--
         <arg name="speckle_size" value="5"/>
         <arg name="speckle_range" value="2"/>
         <arg name="min_disparity" default="0"/>
         -->
      </include>

      <node if="$(arg stereo_sync)" pkg="nodelet" type="nodelet" name="stereo_sync" args="standalone rtabmap_ros/stereo_sync">
         <remap from="left/image_rect"   to="left/image_rect_color"/>
         <remap from="right/image_rect"   to="right/image_rect_color"/>
         <remap from="left/camera_info"   to="left/camera_info"/>
         <remap from="right/camera_info"   to="right/camera_info"/>
      </node>

		<!-- Create point cloud for the planner -->
		<node pkg="nodelet" type="nodelet" name="disparity2cloud" args="load rtabmap_ros/point_cloud_xyz /camera_process">
			<remap from="disparity/image"       to="disparity"/>
			<remap from="disparity/camera_info" to="right/camera_info"/>
			<remap from="cloud"                 to="cloudXYZ"/>
			
			<param name="voxel_size" type="double" value="0.05"/>
			<param name="decimation" type="int" value="4"/>
			<param name="max_depth" type="double" value="4"/>
		</node>

		<node if="$(arg obstacles)" pkg="nodelet" type="nodelet" name="obstacles_detection" args="load rtabmap_ros/obstacles_detection /camera_process">
    		<remap from="cloud" to="cloudXYZ"/>
			<remap from="obstacles" to="/planner_cloud"/>
			<param name="frame_id" type="string" value="base_footprint"/>		
			<param name="map_frame_id" type="string" value="map"/>
			<param name="wait_for_transform" type="bool" value="true"/>
			<param name="Grid/MinClusterSize" type="int" value="20"/>
			<param name="Grid/MaxObstacleHeight" type="double" value="0.0"/>
  		</node>

   </group>

   <group if="$(arg SBC)">
      <!-- robot localization -->
      <!-- http://docs.ros.org/en/melodic/api/robot_localization/html/state_estimation_nodes.html -->
      <node if="$(arg fusion)" pkg="robot_localization" type="ekf_localization_node" name="ekf_se" clear_params="true" output="screen">
        <rosparam command="load" file="$(find rtabmap_ros_my)/launch/config/ekf_localization/mode1.yaml" />
        <!-- <rosparam unless="$(arg footprint)" command="load" file="$(find rtabmap_ros_my)/launch/config/ekf_localization/mode1_a2.yaml" /> -->
        <!-- <param name="tf_prefix" value="dtw_robot1"/> -->
        <!-- <remap from="/odometry/filtered" to="fusion/odom" /> -->
        <remap from="odometry/filtered" to="fusion/odom" />
        <!-- <remap from="odom0" to="diff_drive_controller/odom" /> -->
        <remap from="odom0" to="/odom_fox" />
        <!-- <remap from="imu0"  to="imu/data" /> -->
        <remap from="imu0"  to="/imu" />
      </node>
   </group>

   <group if="$(arg SBC)" ns="rtabmap">   
      <!-- Visual SLAM: args: "delete_db_on_start" and "udebug" -->
      <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="$(arg rtabmap_args)">
         <param name="database_path"       type="string" value="$(arg database_path)"/>
         <param if="$(arg fusion)" name="frame_id" type="string" value="$(arg BASE_LINK)" />
         <param unless="$(arg fusion)" name="frame_id" type="string" value="base_link" />

         <param unless="$(arg stereo_sync)" name="subscribe_stereo" type="bool" value="true"/>
         <param name="subscribe_depth"  type="bool" value="false"/>
         <param if="$(arg stereo_sync)" name="subscribe_rgbd"      type="bool" value="true"/>
         <param name="subscribe_odom_info" type="bool"   value="false"/>
         <param name="subscribe_rgb"      type="bool" value="false"/>
         
         <!-- <param name="approx_sync"      type="bool" value="true"/> -->
         <param name="approx_sync"      type="bool" value="true"/>
         <!-- <param name="stereo_approx_sync"      type="bool" value="true"/> -->

         <remap unless="$(arg stereo_sync)" from="left/image_rect"   to="/left/image_rect_color"/>
         <remap unless="$(arg stereo_sync)" from="right/image_rect"  to="/right/image_rect_color"/>
         <remap unless="$(arg stereo_sync)" from="left/camera_info"  to="/left/camera_info"/>
         <remap unless="$(arg stereo_sync)" from="right/camera_info" to="/right/camera_info"/>
         <remap if="$(arg stereo_sync)" from="rgbd_image"        to="/rgbd_image"/>

         <param name="queue_size" type="int" value="30"/>
         <!-- <param name="map_negative_poses_ignored" type="bool" value="true"/> -->
         <param name="map_always_update" type="bool" value="false"/>
         <!-- <param name="map_always_update" type="bool" value="true"/> -->
         
         <!-- add by nishi 2022.1.15 -->
         <param name="RGBD/AngularUpdate"           type="string" value="0.1"/>    <!-- Update map only if the robot is moving -->
         <param name="RGBD/LinearUpdate"            type="string" value="0.1"/>    <!-- Update map only if the robot is moving -->

         <!-- use actionlib to send goals to move_base --> 
         <param name="use_action_for_goal" type="bool" value="true"/>
         <remap from="move_base"            to="/move_base"/>

         <!--  ~tf_delay (double, default: 0.05) -->
         <!-- <param name="tf_delay" type="double" value="0.8"/> -->

         <!-- <param name="Stereo/MinDisparity"     type="string" value="0.5"/> -->  <!-- 2022.7.11 まで使用 -->
         <param name="Stereo/MinDisparity"     type="string" value="10"/> 
         <!-- <param if="$(arg localization)" name="Stereo/MinDisparity"     type="string" value="5"/> -->
         <!-- <param unless="$(arg localization)" name="Stereo/MinDisparity"     type="string" value="70"/> -->
         <!-- <param unless="$(arg localization)" name="Stereo/MinDisparity"     type="string" value="5"/> -->
         <!-- <param name="Stereo/MaxDisparity"     type="string" value="128"/> -->
         <!-- <param name="Stereo/MaxDisparity"     type="string" value="800"/> -->
         <!-- <param name="Stereo/MaxDisparity"     type="string" value="2000"/> -->
         <param name="Stereo/MaxDisparity"     type="string" value="9000"/>

         <!-- inputs -->
         <remap if="$(arg fusion)" from="odom"     to="/fusion/odom"/>
         <remap unless="$(arg fusion)" from="odom" to="/odom_fox"/>

         <!-- localization mode -->
         <param     if="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="false"/>
         <param unless="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>

         <!-- output -->
         <remap from="grid_map" to="/map"/>
         <!-- <remap from="proj_map" to="/map"/> -->

         <!-- RTAB-Map's parameters -->
         <!-- <param name="Rtabmap/TimeThr"                   type="string" value="700"/> -->
         <param name="Rtabmap/TimeThr"                   type="string" value="0"/>
         <param name="Grid/DepthDecimation"              type="string" value="4"/>
         <param name="Grid/FlatObstacleDetected"         type="string" value="true"/>
         <param name="Kp/MaxDepth"                       type="string" value="0"/>
         <!-- <param name="Kp/MaxDepth"                       type="string" value="2.0"/> -->
         <param name="Kp/DetectorStrategy"               type="string" value="1"/>     <!-- SHIFT -->
         <param name="Vis/FeatureType"                   type="string" value="1"/>    <!-- SHIFT -->
         <!-- <param name="Kp/DetectorStrategy"               type="string" value="2"/> -->   <!-- ORB -->
         <!-- <param name="Kp/DetectorStrategy"               type="string" value="5"/> -->  <!-- GFTT/FREAK -->
         <!-- <param name="Vis/FeatureType"                   type="string" value="5"/> -->  <!-- GFTT/FREAK -->
         <!-- <param name="Kp/DetectorStrategy"               type="string" value="6"/> -->  <!-- default GFTT/BRIEF -->
         <!-- <param name="Vis/FeatureType"                   type="string" value="6"/>  --> <!-- default GFTT/BRIEF -->
         <!-- <param name="Kp/DetectorStrategy"               type="string" value="8"/> -->    <!-- soso! GFTT/ORB -->
         <!-- <param name="Vis/FeatureType"                   type="string" value="8"/> -->   <!-- soso! GFTT/ORB -->
         <!-- <param name="Kp/DetectorStrategy"               type="string" value="9"/> -->  <!-- soso! KAZE -->
         <!--- <param name="Kp/DetectorStrategy"               type="string" value="10"/> -->  <!-- not good ORB-OCTREE -->
         <!-- <param name="Vis/EstimationType"                type="string" value="1"/> -->  <!-- 0=3D->3D, 1=3D->2D (PnP) -->
         <param name="Vis/EstimationType"                type="string" value="1"/>   <!-- 0=3D->3D, 1=3D->2D (PnP) -->
         <param name="Vis/MaxDepth"                      type="string" value="0"/>
         <!-- <param name="Vis/MaxDepth"                      type="string" value="2.0"/> -->
         <param name="RGBD/CreateOccupancyGrid"          type="string" value="true"/>   

         <!-- add by nishi --> 
         <!-- <param name="RGBD/StartAtOrigin"        type="string" value="true"/> -->   <!-- start from at Map(0,0,0) origin position -->
         <!-- <param name="Reg/Strategy"                 type="string" value="1"/> -->
         <!-- https://github.com/introlab/rtabmap/issues/418 -->
         <!-- <param name="odom_frame_id" value="odom"/> --> <!-- adjust to actual odometry frame id -->
         <!-- <param name="odom_tf_linear_variance" value="0.0001"/> --> <!-- adjust depending on real odom error -->
         <!-- <param name="odom_tf_angular_variance" value="0.0005"/> --> <!-- adjust depending on real odom error -->
         <!-- <param name="RGBD/OptimizeMaxError"          type="string" value="3.0"/> -->
         <!-- <param name="RGBD/OptimizeMaxError"          type="string" value="3.1"/> -->
         <!-- <param name="RGBD/OptimizeMaxError"          type="string" value="3.3"/> -->
         <!-- <param name="RGBD/OptimizeMaxError"          type="string" value="3.4"/> -->
         <param name="RGBD/OptimizeMaxError"          type="string" value="3.5"/>  <!-- 2022.5.22まで使用 -->
         <param name="RGBD/LinearUpdate"          type="string" value="0"/>

         <!-- <param name="proj_max_ground_angle" value="15"/> -->     <!-- Grid/MaxGroundAngle に変わった-->
         <!-- <param name="Grid/MaxGroundAngle" value="30"/> -->  <!-- 上下画角の 上の角度 -->
         <!-- <param name="Grid/MaxGroundAngle" value="35"/> -->  <!-- 上下画角の 上の角度 -->
         <param name="Grid/MaxGroundAngle" value="38"/>   <!-- 上下画角の 上の角度 -->
         <param name="Grid/MaxObstacleHeight" type="string" value="1.0"/>    <!-- default 0.0 2022.7.13 -->

         <!-- <param name="Odom/Strategy" value="1"/>  NG -->
         <param name="Odom/FilteringStrategy" value="1"/>   <!-- default=0 0=No filtering 1=Kalman filtering 2=Particle filtering. This filter is used to smooth the odometry output. -->
         <param name="Odom/ParticleSize" value="380"/>   <!-- default=400 -->
         <!--
         <param name="wait_imu_to_init" type="bool" value="true"/>
         <remap from="imu"  to="/imu"/>
         -->

         <!-- <param name="Reg/Force3DoF" value="true"/> -->
         <!-- <param name="Optimizer/Slam2D" value="true" /> -->   <!--  これは、無いみたい。 Reg/Force3DoF に置き換わるとの事 -->
      </node>
   </group>
  
   <group if="$(arg rtabmapviz)" ns="rtabmap">
      <!-- Visualisation RTAB-Map -->
      <node pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz" args="-d $(find rtabmap_ros)/launch/config/rgbd_gui.ini" output="screen">
         <param unless="$(arg stereo_sync)" name="subscribe_stereo"    type="bool" value="true"/>
         <!-- <param name="subscribe_odom_info" type="bool" value="true"/> -->
         <param if="$(arg stereo_sync)" name="subscribe_rgbd"      type="bool" value="true"/>
         <param name="queue_size"          type="int" value="10"/>
         <param name="frame_id"            type="string" value="base_link"/>
         <param name="approx_sync"      type="bool" value="true"/>
         <remap unless="$(arg stereo_sync)" from="left/image_rect"  to="/left/image_rect_color"/>
         <remap unless="$(arg stereo_sync)" from="right/image_rect"  to="/right/image_rect_color"/>
         <remap unless="$(arg stereo_sync)" from="left/camera_info"  to="/left/camera_info"/>
         <remap unless="$(arg stereo_sync)" from="right/camera_info" to="/right/camera_info"/>
         <!-- <remap if="$(arg stereo_sync)" from="rgbd_image"          to="/rgbd_image"/> -->
         <remap if="$(arg stereo_sync)" from="rgbd_image"          to="/rgbd_image/compressed"/>
         <!-- <remap from="odom_info"         to="odom_info"/> -->
         <remap if="$(arg fusion)" from="odom"   to="/fusion/odom"/>
         <remap unless="$(arg fusion)" from="odom" to="/odom_fox"/>
         <remap from="mapData"           to="mapData"/>
         <!-- <remap from="mapData"           to="/map"/> -->
      </node>
   </group>

   <group if="$(arg PC)">
      <group if="$(arg move_base)">
         <!-- move_base -->
         <include file="$(find turtlebot3_navi_my)/launch/move_base_foxbot.launch">
            <arg name="model" value="$(arg model)" />
            <arg name="move_forward_only" value="$(arg move_forward_only)"/>
            <!-- odom を変えられみたい。-->
            <arg if="$(arg fusion)" name="odom_topic" value="/fusion/odom" />
            <arg unless="$(arg fusion)" name="odom_topic" value="/odom_fox" />
            <arg name="EBAND" value="false" />
         </include>
      </group>

      <!-- move_navigation -->
      <node if="$(arg move_navigation)" pkg="turtlebot3_navi_my" type="turtlebot3_navi_my_move_navigation" name="turtlebot3_navi_my_move_navigation" output="screen">
         <rosparam command="load" file="$(find turtlebot3_navi_my)/param_foxbot/move_navigation_point_cloud2.yaml" />
      </node>

      <!-- Visualisation RVIZ --> 
      <node if="$(arg rviz)" pkg="rviz" type="rviz" name="rviz" args="-d $(find rtabmap_ros)/launch/config/demo_stereo_outdoor.rviz"/>
      <node if="$(arg rviz_nishi)" pkg="rviz" type="rviz" name="rviz" args="-d $(find rtabmap_ros_my)/launch/config/nishi-stereoB-navi.rviz"/>
   </group>

   <group if="$(arg robo_navi)" >
      <!-- move_navigation -->
      <node pkg="turtlebot3_navi_my" type="$(arg prog)" name="$(arg prog)" output="screen">
         <rosparam command="load" file="$(find turtlebot3_navi_my)/param_foxbot/move_navigation_point_cloud2.yaml" />
      </node>
   </group> 

</launch>
